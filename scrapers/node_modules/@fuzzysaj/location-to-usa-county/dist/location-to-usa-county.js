"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLocToCountyLookupService = void 0;
const file_utils_1 = require("./file-utils");
const path = require("path");
const gjgLookup = require("geojson-geometries-lookup");
const debug_1 = require("debug");
const debug = (0, debug_1.default)('location-to-usa-county');
// function initializeService(): void
// {
//   debug(`US counties spatial index has not been initialized yet.  Initializing....`);
//   const admin2FeatColl = require('../data/tl_2018_us_county.json') as FeatColl;
//   debug(`admin2FeatColl.type: ${admin2FeatColl.type}`);
//   glookup = new gjgLookup(admin2FeatColl);
//   debug('Finished initializing GeoJsonGeometries index.');
//   if (!glookup) throw new Error('US counties spatial index was not initialized.');
// }
const getSpatialIndex = (() => {
    let glookup = null;
    return async () => {
        if (glookup) {
            debug(`US counties spatial index already initialized.`);
            return glookup;
        }
        debug(`US counties spatial index has not been initialized yet.  Initializing....`);
        const admin2FeatColl = await (0, file_utils_1.gzToJson)(path.join(__dirname, '../data/tl_2018_us_county.json.gz'));
        debug(`admin2FeatColl.type: ${admin2FeatColl.type}`);
        glookup = new gjgLookup(admin2FeatColl);
        debug('Finished initializing GeoJsonGeometries index.');
        if (!glookup)
            throw new Error('US counties spatial index was not initialized.');
        return glookup;
    };
})();
async function getLocToCountyLookupService() {
    const glookup = await getSpatialIndex();
    return function (latitude, longitude) {
        const p = { type: "Point", coordinates: [longitude, latitude] };
        const ccount = glookup.countContainers(p);
        const containers = glookup.getContainers(p);
        if (ccount === 0 || !containers || !containers.features) {
            debug(`County lookup failed.`);
            return null;
        }
        const feat = containers.features[0];
        const props = feat.properties;
        const county = {
            county_name: props.NAME,
            county_fips: props.GEOID
        };
        return county;
    };
}
exports.getLocToCountyLookupService = getLocToCountyLookupService;
//# sourceMappingURL=location-to-usa-county.js.map